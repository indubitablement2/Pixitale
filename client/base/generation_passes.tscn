[gd_scene load_steps=6 format=3 uid="uid://dwifqm8gdteve"]

[sub_resource type="GDScript" id="GDScript_1t5jj"]
script/source = "extends GenerationPass

@export var hill_noise : FastNoiseLite

func _ready() -> void:
	hill_noise.set_seed(Grid.get_seed())

func _generate_chunk(iter: GridChunkIter, _data: GenerationData) -> void:
	if iter.chunk_coord() == Vector2i.ZERO:
		iter.fill_remaining(Base.LAVA_IDX)
	elif iter.chunk_coord().y >= 1:
		if iter.chunk_coord().y == 1:
			while iter.next():
				var h := int(absf(hill_noise.get_noise_1d(iter.coord().x)) * 32.0)
				if iter.chunk_local_coord().y > h:
					iter.set_material_idx(Base.ROCK_IDX)
		else:
			iter.fill_remaining(Base.ROCK_IDX)
	elif iter.chunk_coord().y <= -5:
		iter.fill_remaining(Base.ROCK_IDX)
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_2c33j"]
frequency = 0.003

[sub_resource type="GDScript" id="GDScript_celen"]
script/source = "extends GenerationPass

@export var noise : FastNoiseLite

func _ready() -> void:
	noise.set_seed(Grid.get_seed())

func _generate_slice(data: GenerationData) -> void:
	var pos := data.chunk_mid()
	
	data.set_meta(&\"base_chunk\", Rect2i(pos, -5, 10, 10))

func _generate_chunk(iter: GridChunkIter, data: GenerationData) -> void:
	var rect : Rect2i = data.get_meta(&\"base_chunk\")
	if !rect.has_point(iter.chunk_coord()):
		return
	
	var mid := (rect.position + rect.size / 2) * 32
	var max_dist := Vector2(rect.size * 32).length() * 0.5
	while iter.next():
		var dist := (iter.coord() - mid).length() / max_dist
		if dist < 0.7:
			iter.set_material_idx(Base.LAVA_IDX)
			#iter.set_color(20)
		else:
			iter.set_material_idx(Base.ROCK_IDX)
			iter.set_color(18)
	
	#var hollow := noise.get_noise_1d(iter.chunk_coord().x)
	#
	#if hollow < 0.5:
		#return
	#
	#if hollow > 0.6:
		#while iter.next():
			#if iter.get_material_idx() != 0:
				#iter.set_material_idx(Base.SAND_IDX)
		#return
	#
	#while iter.next():
		#hollow = noise.get_noise_1d(float(iter.coord().x) / 32.0)
		#if iter.get_material_idx() != 0:
			#if iter.randb_probability((hollow - 0.5) * 10.0):
				#iter.set_material_idx(Base.SAND_IDX)
	
"

[sub_resource type="FastNoiseLite" id="FastNoiseLite_k8wdx"]

[sub_resource type="GDScript" id="GDScript_cusp1"]
script/source = "extends GenerationPass

@export var noise : FastNoiseLite

var castle_chunk_rect : Rect2i

func _ready() -> void:
	pass

func _generate_slice(data: GenerationData) -> void:
	var pos := data.chunk_mid()
	
	data.set_meta(&\"base_chunk\", Rect2i(pos, -5, 10, 10))

func _generate_chunk(iter: GridChunkIter, data: GenerationData) -> void:
	var rect : Rect2i = data.get_meta(&\"base_chunk\")
	if !rect.has_point(iter.chunk_coord()):
		return
	
	var mid := (rect.position + rect.size / 2) * 32
	var max_dist := Vector2(rect.size * 32).length() * 0.5
	while iter.next():
		var dist := (iter.coord() - mid).length() / max_dist
		if dist < 0.7:
			iter.set_material_idx(Base.LAVA_IDX)
			#iter.set_color(20)
		else:
			iter.set_material_idx(Base.ROCK_IDX)
			iter.set_color(18)
"

[node name="BaseGeneration" type="Node"]

[node name="RockPlane" type="Node" parent="."]
script = SubResource("GDScript_1t5jj")
hill_noise = SubResource("FastNoiseLite_2c33j")

[node name="GenerationPass" type="Node" parent="."]
script = SubResource("GDScript_celen")
noise = SubResource("FastNoiseLite_k8wdx")

[node name="Castle" type="Node" parent="."]
script = SubResource("GDScript_cusp1")
