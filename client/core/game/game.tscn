[gd_scene load_steps=36 format=3 uid="uid://cs41g41rbjtf3"]

[ext_resource type="Script" path="res://core/game/grid_render.gd" id="1_3cgdd"]
[ext_resource type="Script" path="res://core/game/game.gd" id="1_bg66v"]
[ext_resource type="Environment" uid="uid://bet72xvipytek" path="res://core/default_environment.tres" id="2_3hhhn"]
[ext_resource type="Texture2D" uid="uid://ck73ei3ddic5k" path="res://core/texture/util/pixel.png" id="2_caqnh"]
[ext_resource type="Material" uid="uid://d0lxlug0pmk6x" path="res://core/shader/cell_light.tres" id="4_4n7ow"]
[ext_resource type="Material" uid="uid://pibq0mikbild" path="res://core/shader/cell_to_light_modulate.tres" id="4_ctfg4"]
[ext_resource type="Texture2D" uid="uid://bt8vd52xyn6om" path="res://core/shader/texture/cell_raw_data/foreground.tres" id="4_xxntp"]
[ext_resource type="Environment" uid="uid://bwynyoamvipor" path="res://core/game/light_pass_environment.tres" id="7_3kidg"]
[ext_resource type="PackedScene" uid="uid://5ojtd4d004ve" path="res://core/camera/free_camera.tscn" id="7_7jk4b"]
[ext_resource type="Texture2D" uid="uid://dcodkd1xxqxik" path="res://core/shader/texture/cell_raw_data/background.tres" id="7_602ny"]
[ext_resource type="Shader" path="res://core/shader/environment_light.gdshader" id="8_l1xnb"]
[ext_resource type="Material" uid="uid://btwoiop8xxp15" path="res://core/shader/cell_render.material" id="8_onaw1"]
[ext_resource type="Shader" path="res://core/shader/foreground_glow.gdshader" id="9_etry3"]
[ext_resource type="Texture2D" uid="uid://t50h32apl4gq" path="res://core/shader/texture/cell_materials_data/glow.tres" id="11_rdegm"]
[ext_resource type="Texture2D" uid="uid://cohkmmuriclai" path="res://base/texture/bg/bg_lac_1.png" id="12_wrkjg"]
[ext_resource type="PackedScene" uid="uid://b7fwx4nr02qhh" path="res://DELETE.tscn" id="14_a3qr0"]

[sub_resource type="World3D" id="World3D_28ayb"]
environment = ExtResource("7_3kidg")

[sub_resource type="GDScript" id="GDScript_x0xfk"]
script/source = "extends Node2D

@export var item_list : ItemList
@export var color_picker : ItemList
@export var brush_size_range : Range

var draw_mat_idx := 0
var color := 0
var color_only := false
var pressed := false

func _ready() -> void:
	for mat in GridApi.cell_materials:
		item_list.add_item(mat.name)
	item_list.select(0)
	item_list.item_selected.connect(_on_item_selected)
	
	for i in Global.COLOR_PALETTE.size():
		color_picker.add_item(\"     \")
		color_picker.set_item_custom_bg_color(i,  Global.COLOR_PALETTE[i])
	color_picker.item_selected.connect(_on_color_picker_item_selected)

func _unhandled_input(event: InputEvent) -> void:
	if event.is_action(\"primary\"):
		pressed = event.is_pressed()

func _process(_delta: float) -> void:
	if pressed:
		var rect := Rect2i(Global.mouse_coord, Vector2i.ONE).grow(int(brush_size_range.value))
		if !color_only:
			Core.set_cell_material_rect(
				draw_mat_idx,
				rect)
		Core.set_color_rect(
			color,
			rect)

func _on_item_selected(idx: int) -> void:
	draw_mat_idx = idx

func _on_visibility_changed() -> void:
	set_process_input(visible)
	set_process(visible)

func _on_color_picker_item_selected(idx: int) -> void:
	color = idx
"

[sub_resource type="GDScript" id="GDScript_qtqv4"]
script/source = "extends VBoxContainer

func _ready() -> void:
	if !GridApi.is_server:
		hide()
"

[sub_resource type="GDScript" id="GDScript_6ddpr"]
script/source = "extends Button

func _pressed() -> void:
	Core.set_paused(!Game.is_paused())

"

[sub_resource type="GDScript" id="GDScript_e0md8"]
script/source = "extends Button

func _ready() -> void:
	set_process(false)

func _process(_delta: float) -> void:
	set_process(false)
	Core.set_paused(true)

func _pressed() -> void:
	set_process(true)
	Core.set_paused(false)
"

[sub_resource type="GDScript" id="GDScript_xdcdo"]
script/source = "extends Button

@export var active_rect_node : Node2D

func _pressed() -> void:
	active_rect_node.set_visible(!active_rect_node.is_visible())
"

[sub_resource type="GDScript" id="GDScript_nlogk"]
script/source = "extends Button

@export var cell_render_material : ShaderMaterial


func _pressed() -> void:
	cell_render_material.set_shader_parameter(
		&\"highlight_active\",
		!cell_render_material.get_shader_parameter(&\"highlight_active\"))
	
"

[sub_resource type="GDScript" id="GDScript_kfpdw"]
script/source = "extends Label


func _process(_delta: float) -> void:
	text = GridApi.cell_materials[Grid.get_cell_material_idx(Global.mouse_coord)].display_name
"

[sub_resource type="GDScript" id="GDScript_qfjca"]
script/source = "extends Label


func _process(_delta: float) -> void:
	text = str(Global.mouse_coord)
"

[sub_resource type="GDScript" id="GDScript_r6x6c"]
script/source = "extends Label


func _process(_delta: float) -> void:
	text = str(Game.tick)
"

[sub_resource type="GDScript" id="GDScript_6sk05"]
script/source = "extends Label


func _process(_delta: float) -> void:
	text = str(Grid.get_tick())
"

[sub_resource type="GDScript" id="GDScript_d36ir"]
script/source = "extends Button

@export var debug_menu : CanvasItem

func _unhandled_input(event: InputEvent) -> void:
	if event.is_action_pressed(&\"secondary\"):
		_pressed()

func _pressed() -> void:
	debug_menu.set_visible(!debug_menu.is_visible())
"

[sub_resource type="ViewportTexture" id="ViewportTexture_k6afj"]
viewport_path = NodePath("BackgroundLightModulate")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_jgnly"]
resource_local_to_scene = true
shader = ExtResource("8_l1xnb")
shader_parameter/light_color = Color(0.5, 0.5, 0.5, 1)
shader_parameter/background = SubResource("ViewportTexture_k6afj")

[sub_resource type="ViewportTexture" id="ViewportTexture_4smn4"]
viewport_path = NodePath("ForegroundLightModulate")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_xrpb2"]
shader = ExtResource("9_etry3")
shader_parameter/glow = ExtResource("11_rdegm")

[sub_resource type="CanvasItemMaterial" id="CanvasItemMaterial_f00lt"]
blend_mode = 3

[sub_resource type="ViewportTexture" id="ViewportTexture_5p4mp"]
viewport_path = NodePath("LightPass")

[sub_resource type="GDScript" id="GDScript_f8hf2"]
script/source = "extends Node2D

# Draw the active rect of visible chunks.
# Deactivate itself when hidden.

func _ready() -> void:
	set_process(is_visible())

func _process(_delta: float) -> void:
	queue_redraw()

func _draw() -> void:
	var p := GridRender.raw_cell_rect.position / 32
	var s := GridRender.raw_cell_rect.size / 32
	
	for y in s.y:
		for x in s.x:
			var r := Grid.get_chunk_active_rect(p + Vector2i(x, y))
			if r.has_area():
				draw_rect(
					Rect2(Vector2i(x, y) * 32 + r.position, r.size),
					Color.ALICE_BLUE,
					false)

func _on_visibility_changed() -> void:
	set_process(is_visible())
"

[node name="Game" type="Node"]
script = ExtResource("1_bg66v")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = ExtResource("2_3hhhn")

[node name="BackgroundLightModulate" type="SubViewport" parent="."]
editor_description = "Background raw cell data to light modulate. Eg. How light change or is blocked by background cell. Result is used by a few lights effects."
disable_3d = true
canvas_item_default_texture_filter = 0
render_target_update_mode = 4

[node name="Background" type="Sprite2D" parent="BackgroundLightModulate"]
material = ExtResource("4_ctfg4")
texture = ExtResource("7_602ny")
centered = false

[node name="ForegroundLightModulate" type="SubViewport" parent="."]
editor_description = "Foreground raw cell data to light modulate. Eg. How light change or is blocked by foreground cell. Result is used by most lights effects."
disable_3d = true
canvas_item_default_texture_filter = 0
render_target_update_mode = 4

[node name="Foreground" type="Sprite2D" parent="ForegroundLightModulate"]
material = ExtResource("4_ctfg4")
texture = ExtResource("4_xxntp")
centered = false

[node name="LightPass" type="SubViewport" parent="."]
process_mode = 3
editor_description = "Use the same World2D as the main scene, so there is no need to add child node to this.

Display canvas items which are on the Light layer. Make sure it and its parents have Light visibility_layer enabled. 

Most light should use additive blend mode."
disable_3d = true
world_3d = SubResource("World3D_28ayb")
canvas_item_default_texture_filter = 0
canvas_cull_mask = 4293918722
render_target_update_mode = 4

[node name="Draw" type="Node2D" parent="." node_paths=PackedStringArray("item_list", "color_picker", "brush_size_range")]
process_mode = 3
z_index = 300
z_as_relative = false
script = SubResource("GDScript_x0xfk")
item_list = NodePath("../GUI/MarginContainer/DebugMenu/CellMaterialPicker")
color_picker = NodePath("../GUI/MarginContainer/DebugMenu/VBoxContainer/ColorPicker")
brush_size_range = NodePath("../GUI/MarginContainer/DebugMenu/VBoxContainer/CursorSize")

[node name="GUI" type="CanvasLayer" parent="."]
process_mode = 3

[node name="MarginContainer" type="MarginContainer" parent="GUI"]
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
theme_override_constants/margin_left = 16
theme_override_constants/margin_top = 16
theme_override_constants/margin_right = 16
theme_override_constants/margin_bottom = 16

[node name="DebugMenu" type="HBoxContainer" parent="GUI/MarginContainer"]
layout_mode = 2

[node name="ScrollContainer" type="ScrollContainer" parent="GUI/MarginContainer/DebugMenu"]
layout_mode = 2
size_flags_horizontal = 0
horizontal_scroll_mode = 0

[node name="VBoxContainer" type="VBoxContainer" parent="GUI/MarginContainer/DebugMenu/ScrollContainer"]
layout_mode = 2

[node name="ServerOnly" type="VBoxContainer" parent="GUI/MarginContainer/DebugMenu/ScrollContainer/VBoxContainer"]
layout_mode = 2
script = SubResource("GDScript_qtqv4")

[node name="Pause" type="Button" parent="GUI/MarginContainer/DebugMenu/ScrollContainer/VBoxContainer/ServerOnly"]
layout_mode = 2
size_flags_horizontal = 4
text = "Toggle Pause"
script = SubResource("GDScript_6ddpr")

[node name="Step" type="Button" parent="GUI/MarginContainer/DebugMenu/ScrollContainer/VBoxContainer/ServerOnly"]
layout_mode = 2
size_flags_vertical = 0
text = "Step"
script = SubResource("GDScript_e0md8")

[node name="Rendering" type="VBoxContainer" parent="GUI/MarginContainer/DebugMenu/ScrollContainer/VBoxContainer"]
layout_mode = 2

[node name="ActiveRect" type="Button" parent="GUI/MarginContainer/DebugMenu/ScrollContainer/VBoxContainer/Rendering" node_paths=PackedStringArray("active_rect_node")]
layout_mode = 2
text = "Active Rect"
script = SubResource("GDScript_xdcdo")
active_rect_node = NodePath("../../../../../../../GridRender/ActiveRect")

[node name="ActiveCell" type="Button" parent="GUI/MarginContainer/DebugMenu/ScrollContainer/VBoxContainer/Rendering"]
layout_mode = 2
text = "Active Cell"
script = SubResource("GDScript_nlogk")
cell_render_material = ExtResource("8_onaw1")

[node name="CellMaterialPicker" type="ItemList" parent="GUI/MarginContainer/DebugMenu"]
custom_minimum_size = Vector2(90, 0)
layout_mode = 2
size_flags_vertical = 0
auto_height = true

[node name="VBoxContainer" type="VBoxContainer" parent="GUI/MarginContainer/DebugMenu"]
layout_mode = 2

[node name="CursorSize" type="HSlider" parent="GUI/MarginContainer/DebugMenu/VBoxContainer"]
custom_minimum_size = Vector2(300, 0)
layout_mode = 2
max_value = 32.0
value = 16.0
rounded = true

[node name="ColorPicker" type="ItemList" parent="GUI/MarginContainer/DebugMenu/VBoxContainer"]
layout_mode = 2
allow_search = false
auto_height = true
max_columns = 8

[node name="VBoxContainer" type="VBoxContainer" parent="GUI/MarginContainer"]
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 8

[node name="HoverCellName" type="HBoxContainer" parent="GUI/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="GUI/MarginContainer/VBoxContainer/HoverCellName"]
layout_mode = 2
size_flags_horizontal = 0
size_flags_vertical = 0
text = "Water"
script = SubResource("GDScript_kfpdw")

[node name="MouseCoord" type="HBoxContainer" parent="GUI/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="GUI/MarginContainer/VBoxContainer/MouseCoord"]
layout_mode = 2
text = "Coord:"

[node name="Label2" type="Label" parent="GUI/MarginContainer/VBoxContainer/MouseCoord"]
layout_mode = 2
script = SubResource("GDScript_qfjca")

[node name="GameTick" type="HBoxContainer" parent="GUI/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="GUI/MarginContainer/VBoxContainer/GameTick"]
layout_mode = 2
text = "Game Tick:"

[node name="Label2" type="Label" parent="GUI/MarginContainer/VBoxContainer/GameTick"]
layout_mode = 2
script = SubResource("GDScript_r6x6c")

[node name="GridTick" type="HBoxContainer" parent="GUI/MarginContainer/VBoxContainer"]
layout_mode = 2

[node name="Label" type="Label" parent="GUI/MarginContainer/VBoxContainer/GridTick"]
layout_mode = 2
text = "Grid Tick:"

[node name="Label2" type="Label" parent="GUI/MarginContainer/VBoxContainer/GridTick"]
layout_mode = 2
script = SubResource("GDScript_6sk05")

[node name="DebugMenu" type="Button" parent="GUI/MarginContainer/VBoxContainer" node_paths=PackedStringArray("debug_menu")]
layout_mode = 2
size_flags_horizontal = 0
text = "Debug Menu"
script = SubResource("GDScript_d36ir")
debug_menu = NodePath("../../DebugMenu")

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground"]
position = Vector2(0, -200)
texture = ExtResource("12_wrkjg")
centered = false

[node name="GridRender" type="Node2D" parent="." node_paths=PackedStringArray("background_light_modulate_viewport", "foreground_light_modulate_viewport", "light_pass_viewport")]
process_mode = 3
visibility_layer = 3
script = ExtResource("1_3cgdd")
background_light_modulate_viewport = NodePath("../BackgroundLightModulate")
foreground_light_modulate_viewport = NodePath("../ForegroundLightModulate")
light_pass_viewport = NodePath("../LightPass")
cell_light_material = ExtResource("4_4n7ow")

[node name="EnvironmentLight" type="Sprite2D" parent="GridRender"]
editor_description = "Light from the environment (not cell). Blocked by background and foreground cells.

This is also used to clear the screen."
visibility_layer = 2
z_index = -200
z_as_relative = false
material = SubResource("ShaderMaterial_jgnly")
texture = SubResource("ViewportTexture_4smn4")
centered = false

[node name="EnvironmentLightRay" type="Sprite2D" parent="GridRender"]
visible = false
visibility_layer = 2
z_index = -100
z_as_relative = false
centered = false

[node name="ForegroundGlow" type="Sprite2D" parent="GridRender"]
editor_description = "Glow from foreground cells."
visibility_layer = 2
z_index = -100
z_as_relative = false
material = SubResource("ShaderMaterial_xrpb2")
texture = ExtResource("4_xxntp")
centered = false

[node name="Backgroud" type="Sprite2D" parent="GridRender"]
editor_description = "Raw cell data to rendered background cell."
visible = false
z_index = -200
z_as_relative = false
texture = ExtResource("7_602ny")
centered = false

[node name="Foreground" type="Sprite2D" parent="GridRender"]
editor_description = "Raw cell data to rendered foreground cell."
z_index = 100
z_as_relative = false
material = ExtResource("8_onaw1")
texture = ExtResource("4_xxntp")
centered = false

[node name="Light" type="Sprite2D" parent="GridRender"]
editor_description = "Output from LightPass."
z_index = 200
z_as_relative = false
material = SubResource("CanvasItemMaterial_f00lt")
texture = SubResource("ViewportTexture_5p4mp")
centered = false

[node name="ActiveRect" type="Node2D" parent="GridRender"]
process_priority = 10
editor_description = "Display active rect of chunks."
visible = false
z_index = 500
z_as_relative = false
script = SubResource("GDScript_f8hf2")

[node name="BlackBarTODO" type="Sprite2D" parent="."]
visible = false
modulate = Color(0, 0, 0, 1)
visibility_layer = 2
z_index = -100
z_as_relative = false
scale = Vector2(1.04858e+06, 1)
texture = ExtResource("2_caqnh")
centered = false
offset = Vector2(-0.5, 0)
region_rect = Rect2(-11.855, -6.755, 9.905, 5.69)

[node name="FreeCamera" parent="." instance=ExtResource("7_7jk4b")]
zoom = Vector2(4, 4)

[node name="GridBody" parent="." instance=ExtResource("14_a3qr0")]

[connection signal="visibility_changed" from="Draw" to="Draw" method="_on_visibility_changed"]
[connection signal="visibility_changed" from="GridRender/ActiveRect" to="GridRender/ActiveRect" method="_on_visibility_changed"]
